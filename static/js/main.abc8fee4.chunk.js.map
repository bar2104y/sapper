{"version":3,"sources":["Components/mainmenu.js","Pannels/Home.js","Components/Playarea.js","Components/Leaders.js","App.js","serviceWorker.js","index.js"],"names":["Mainmenu","className","onClick","this","props","go","data-to","share","React","Component","Home","id","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","Playarea","resetData","bind","getPosByIndex","selectRect","genArea","isMine","isClear","getMinesInBlock","winGame","filedGame","canvas","refs","ctx","getContext","addEventListener","createCanvas","canvSize","window","innerWidth","lineWidth","areaSize","step","area","firstPress","score","openedMines","areaOpen","i","j","x","fillStyle","fillRect","beginPath","moveTo","lineTo","strokeStyle","stroke","e","xPos","clientX","target","offsetLeft","yPos","clientY","offsetTop","xIndex","Math","floor","yIndex","openBlock","lastblock","y","nx","ny","a","random","push","length","f","splice","cnt","document","getElementById","innerHTML","getMinesAround","font","textBaseline","fillText","ref","width","height","Leaders","leadersList","App","setState","activePanel","currentTarget","dataset","to","connect","send","state","subscribe","detail","type","data","console","log","Boolean","location","hostname","match","ReactDOM","render"],"mappings":"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","file":"static/js/main.abc8fee4.chunk.js","sourcesContent":["import React from 'react';\nimport '../Css/mainmenu.css'\n\nclass Mainmenu extends React.Component {\n    render(){\n        return(\n            <div className=\"mainMenuConatainer\">\n                <div className=\"actionButton\" onClick={this.props.go} data-to=\"play\"><p>Играть</p></div>\n                <div className=\"actionButton\" onClick={this.props.go} data-to=\"leaders\"><p>Лидеры</p></div>\n                <div className=\"actionButton\" onClick={this.props.share} data-to=\"share\"><p>Поделиться</p></div>\n            </div>\n        )\n    }\n}\n\nexport default Mainmenu","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, Group, PanelHeader, ListItem, Avatar} from '@vkontakte/vkui';\nimport Mainmenu from '../Components/mainmenu'\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Сапер</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"Добро пожаловать!\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t\t<Mainmenu go={go} />\n\t\t</Group>}\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;","import React from 'react';\nimport '../Css/game.css'\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\n\n\n\nclass Playarea extends React.Component {\n    constructor (props){\n        super(props);\n        this.resetData = this.resetData.bind(this)\n        this.resetData()\n\n        //Подключение функций (объясните мне зачем это вообще нужно)\n        this.getPosByIndex = this.getPosByIndex.bind(this)\n        this.selectRect = this.selectRect.bind(this)\n        this.genArea = this.genArea.bind(this)\n        this.isMine = this.isMine.bind(this)\n        this.isClear = this.isClear.bind(this)\n        this.getMinesInBlock = this.getMinesInBlock.bind(this)\n        \n        this.winGame = this.winGame.bind(this)\n        this.filedGame = this.filedGame.bind(this)\n    }\n    componentDidMount(){\n        //иницианализация холста\n        this.canvas = this.refs.canvas\n        this.ctx = this.refs.canvas.getContext('2d')\n        // Прослушиваем событие клика\n        this.canvas.addEventListener('click', this.selectRect)\n        //Подготавливаем холст\n        this.createCanvas()\n    }\n\n    componentDidUpdate(){\n        this.resetData()\n    }\n\n    resetData(){\n        this.canvSize = window.innerWidth*0.9    //Размер холста px\n        this.lineWidth = 2                       //Толщина линии px\n        this.areaSize = 10                       //Кол-во ячеек в стороне\n        this.step = (this.canvSize-(2*this.lineWidth))/this.areaSize //Ширина и высота клетки\n        this.area = []                           // Массив мина/не мина\n        this.firstPress = true                   //Первый клик\n        this.score = this.areaSize*this.areaSize //Стартовое кол-во очков\n        this.openedMines = []                       //Открытые ячейки\n\n        //Подготовка массива с открытыми ячейками\n        this.areaOpen = []\n        for (let i = 0; i<this.areaSize; i++){\n            this.areaOpen[i] = []\n            for ( let j = 0; j < this.areaSize; j++){\n                this.areaOpen[i][j] = 0\n            }\n        }\n    }\n\n    //Получение левого верзнего угла ячейки\n    getPosByIndex(x){\n        return(x*this.step+this.lineWidth)\n    }\n\n    //Создание заготовки игрового поля\n    createCanvas(){\n        //Заполнение фона\n        this.ctx.fillStyle=\"#9E9E9E\";\n        this.ctx.fillRect(0,0,this.canvSize,this.canvSize);\n\n        //Прорисовка линий\n        this.ctx.beginPath()\n        this.ctx.lineWidth = this.lineWidth\n\n        for(let i = this.lineWidth; i<=this.canvSize; i+=this.step ){\n            this.ctx.moveTo(0,i)\n            this.ctx.lineTo(this.canvSize,i)\n            this.ctx.moveTo(i,0)\n            this.ctx.lineTo(i,this.canvSize)\n        }\n\n        //Отображение изменений\n        this.ctx.strokeStyle=\"#333\"\n        this.ctx.stroke()\n\n    }\n\n    //При клике на поле\n    selectRect(e){\n\n        this.ctx.beginPath()\n        this.ctx.fillStyle=\"#5E5E5E\";\n        \n        //Получение координат клика\n        let xPos = e.clientX-e.target.offsetLeft\n        let yPos = e.clientY-e.target.offsetTop\n\n        //Определение ячейки\n        let xIndex = Math.floor(xPos/this.step)\n        let yIndex = Math.floor(yPos/this.step)\n\n        //Координаты левого верхнего угла ячейки\n        xPos = this.getPosByIndex(xIndex)\n        yPos = this.getPosByIndex(yIndex)\n        \n        //Определение первого клика\n        if (this.firstPress){\n            // пометить как открытый\n            this.ctx.fillRect(xPos,yPos, this.step, this.step)\n            this.firstPress = false\n            this.genArea(xIndex,yIndex)\n            \n            this.areaOpen[xIndex][yIndex] = 2\n\n            this.openBlock(xIndex,yIndex)\n            this.lastblock= [xIndex+1,yIndex+1]\n        } else{\n            //отмена предыдущего выделения\n            if (this.areaOpen[this.lastblock[0]][this.lastblock[1]] < 2){\n                this.ctx.fillStyle=\"#9E9E9E\";\n                this.ctx.fillRect(this.getPosByIndex(this.lastblock[0]),\n                    this.getPosByIndex(this.lastblock[1]),\n                    this.step, this.step)\n            }\n\n            //Запомнить выбор\n            this.lastblock = [xIndex,yIndex]\n            \n            //выделение ячейки\n            if(this.areaOpen[xIndex][yIndex] < 2){\n                this.ctx.fillStyle=\"#7E7E7E\";\n                this.ctx.fillRect(xPos,yPos, this.step, this.step)\n            }\n            \n        }\n        \n        //перерисовка прямых, костыль\n        this.ctx.lineWidth = this.lineWidth/2\n        for(let i = this.lineWidth; i<=this.canvSize; i+=this.step ){\n            this.ctx.moveTo(0,i)\n            this.ctx.lineTo(this.canvSize,i)\n            this.ctx.moveTo(i,0)\n            this.ctx.lineTo(i,this.canvSize)\n        }\n        //Отображение изменений\n        this.ctx.stroke()\n    }\n\n    //Генерация мин\n    genArea(x,y){\n        //Инициализация массива\n        let a = []\n        for (let i = 0; i<this.areaSize; i++){\n            a[i] = []\n            for ( let j = 0; j < this.areaSize; j++){\n                a[i][j] = 0\n            }\n        }\n        \n\n        //Генерация мин\n        let nx,ny\n        let i = 0\n        while (i< this.areaSize){\n            nx = Math.floor(Math.random()*10)\n            ny = Math.floor(Math.random()*10)\n\n            if((nx !==x || ny !==y) && a[nx][ny] === 0){\n                a[nx][ny] = 1\n                i++\n            }\n        }\n        \n        //Запись в глобальную переменную\n        \n        this.area = a\n\n    }\n\n    //Клик на кнопку МИНА\n    isMine(){\n        \n        let xIndex = this.lastblock[0]\n        let yIndex = this.lastblock[1]\n        //Позиция курсора\n        let xPos = this.getPosByIndex( xIndex)\n        let yPos = this.getPosByIndex( yIndex)\n        //Заливка ячейки красным цветом\n        this.ctx.fillStyle=\"darkred\";\n        this.ctx.fillRect(xPos,yPos, this.step, this.step)\n        //Помечаем как предпологаемую мину\n        this.areaOpen[xIndex][yIndex] = 3\n        this.openedMines.push([xIndex,yIndex])\n        \n        \n        //Все ли мины подсвечены\n        if (this.openedMines.length === this.areaSize){\n            let f = true\n            //Все ли из подсвеченных верны\n            for (let i = 0; i< this.openedMines.length; i++){\n                if (this.area[this.openedMines[i][0]][this.openedMines[i][1]] === 0) f = false\n            }\n            //Если подсвечены все, и помечены верно, то победа игрока\n            if (f){\n                this.winGame()\n            }\n        }\n\n    }\n\n    //Нажатие на кнопку ПУСТО\n    isClear(){\n        //Получение ячейки\n        let xIndex = this.lastblock[0]\n        let yIndex = this.lastblock[1]\n\n        //Если мина, то ГГ\n        if (this.area[xIndex][yIndex] === 1){\n            this.filedGame()\n        //Если пустоя, то открываем ее\n        }else if (this.area[xIndex][yIndex] === 0 || this.areaOpen[xIndex][yIndex] === 3){\n            //Если ранее ячейка была подсвечена как мина\n            if (this.areaOpen[xIndex][yIndex] === 3){\n                for (let i = 0; i< this.openedMines.length; i++){\n                    //удаляем информацию о пометке\n                    if (this.openedMines[i][0] === xIndex && this.openedMines[i][1] === yIndex){\n                        this.openedMines.splice(i,1)\n                    }\n                }\n            }\n            //Открываем эту ячейку\n            this.openBlock(xIndex,yIndex)\n            //Меняем кол-во очков\n            this.score --\n        }\n        //Подсчитываем кол-во открытых пустых клеток\n        let cnt = 0\n        for (let i = 0; i<this.areaSize; i++){\n            for ( let j = 0; j < this.areaSize; j++){\n                if (this.areaOpen[i][j] === 2 )\n                    cnt ++\n            }\n        }\n        //Если все чистые открыты, то победа игрока\n        if (cnt === this.areaSize*this.areaSize-this.areaSize)\n            this.winGame()\n        //Выводим кол-во очков на экран\n        document.getElementById(\"scores\").innerHTML = this.score\n    }\n\n    //Проверка ячейки на наличие мин\n    getMinesInBlock(x,y){\n        //Проаерка на границы поля\n        if (x<0 || y<0 || x>=this.areaSize || y >= this.areaSize) return 0\n        //Если мина, то 1\n        else if (this.area[x][y] === 1) return 1\n        else return 0\n    }\n\n    //Кол-во мин вокруг клетки\n    getMinesAround(x,y){\n        let cnt = 0 // Кол-во мин\n        \n        //Перебор ячеек вокруг\n        cnt += this.getMinesInBlock(x+1,y-1)\n        cnt += this.getMinesInBlock(x+1,y)\n        cnt += this.getMinesInBlock(x+1,y+1)\n        cnt += this.getMinesInBlock(x,y-1)\n        cnt += this.getMinesInBlock(x,y+1)\n        cnt += this.getMinesInBlock(x-1,y-1)\n        cnt += this.getMinesInBlock(x-1,y)\n        cnt += this.getMinesInBlock(x-1,y+1)\n        //Возвращаем количество мин\n        return(cnt)\n    }\n\n    //ОТкрытие ячейки\n    openBlock(xIndex,yIndex){\n        //Проверка на границы поля\n        if (xIndex<0 || yIndex < 0 || xIndex >= this.areaSize || yIndex >= this.areaSize)\n        return(0)\n\n        //помечаем как открытую\n        this.areaOpen[xIndex][yIndex] = 2\n\n        //левый верхний угол ячейки\n        let xPos = this.getPosByIndex(xIndex)\n        let yPos = this.getPosByIndex(yIndex)\n\n        //Закрашиваем как открытую\n        this.ctx.fillStyle=\"#5E5E5E\";\n        this.ctx.fillRect(xPos,yPos, this.step, this.step)\n        \n        //Если вокруг мин нет, открываем ячейки\n        if (this.getMinesAround(xIndex,yIndex) === 0 ){\n            //по очереди открываем ячейки вор=круг, try-catch ловит выход за пределы поля\n            try{ if (this.area[xIndex+1][yIndex+1] === 0 && this.areaOpen[xIndex+1][yIndex+1] !==2) this.openBlock(xIndex+1,yIndex+1)} catch(e){}\n            try{ if (this.area[xIndex+1][yIndex] === 0   && this.areaOpen[xIndex+1][yIndex+1] !==2) this.openBlock(xIndex+1,yIndex)} catch(e){}\n            try{ if (this.area[xIndex+1][yIndex-1] === 0 && this.areaOpen[xIndex+1][yIndex-1] !==2) this.openBlock(xIndex+1,yIndex-1)} catch(e){}\n            try{ if (this.area[xIndex][yIndex+1] === 0   && this.areaOpen[xIndex][yIndex+1] !==2) this.openBlock(xIndex,yIndex+1)} catch(e){}\n            try{ if (this.area[xIndex][yIndex-1] === 0   && this.areaOpen[xIndex][yIndex-1] !==2) this.openBlock(xIndex,yIndex-1)} catch(e){}\n            try{ if (this.area[xIndex-1][yIndex+1] === 0 && this.areaOpen[xIndex-1][yIndex+1] !==2) this.openBlock(xIndex-1,yIndex+1)} catch(e){}\n            try{ if (this.area[xIndex-1][yIndex] === 0   && this.areaOpen[xIndex-1][yIndex] !==2) this.openBlock(xIndex-1,yIndex)} catch(e){}\n            try{ if (this.area[xIndex-1][yIndex-1] === 0 && this.areaOpen[xIndex-1][yIndex-1] !==2) this.openBlock(xIndex-1,yIndex-1)} catch(e){}\n\n        } else{\n            //Если есть мины вокруг, пишем их количество\n            this.ctx.fillStyle = 'whitesmoke'\n            this.ctx.font = \"bold \" + Math.floor(this.step/1.5) + \"pt sans-serif\"\n            this.ctx.textBaseline = \"center\"\n            this.ctx.fillText(this.getMinesAround(xIndex,yIndex),xPos+this.step/4,yPos+this.step/1.1)\n        }\n        \n    }\n\n    //Конец игры, победа\n    winGame(){\n        this.ctx.fillStyle=\"green\";\n        this.ctx.fillRect(0,0,this.canvSize,this.canvSize);\n        //WIP\n    }\n\n    //Проигрыш\n    filedGame(){\n        this.ctx.fillStyle=\"darkred\";\n        this.ctx.fillRect(0,0,this.canvSize,this.canvSize);\n        //WIP\n    }\n    \n    render(){\n        return(\n            <Panel id={this.props.id}>\n                <PanelHeader>\n                    Сапер\n                </PanelHeader>\n                <div>\n                    <div className=\"topMenu\" >\n                        <div id=\"scores\">{this.score}</div>\n                        <div id=\"time\">Сапёр</div>\n                    </div>\n                    <div className=\"gameContainer\">\n                        <canvas id=\"canvas\" ref=\"canvas\" width={this.canvSize} height={this.canvSize} />\n                    </div>\n                    <div className=\"buttonContainer\">\n                        <div onClick={this.isMine}>\n                            Мина\n                        </div>\n                        <div onClick={this.isClear}>\n                            Пусто\n                        </div>\n                    </div>\n                    <div className=\"backBtn\" onClick={this.props.go} data-to=\"home\">Домой</div>\n                </div>\n            </Panel>\n        )\n    }\n}\n\nexport default Playarea","import React from 'react';\nimport '../Css/game.css'\nimport { Panel, PanelHeader,Group,Cell } from '@vkontakte/vkui';\n\n//const URL = 'https://iskatel.msk.ru/sapper/sapper.php?type=get'\n\nclass Leaders extends React.Component {\n    constructor (props){\n        super(props);\n\n        this.leadersList = []\n    }\n    componentDidMount(){\n        //fetch(URL, options).then(response => console.log(response))\n    }\n\n    componentDidUpdate(){\n\n    }\n\n    \n    render(){\n        return(\n            <Panel id={this.props.id}>\n                <PanelHeader>\n                    Сапер - Таблица лидеров\n                </PanelHeader>\n                <Group title=\"Топ-20\">\n                    <Cell>HackerOK</Cell>\n                </Group>\n            </Panel>\n        )\n    }\n}\n\nexport default Leaders","import React from 'react';\nimport './App.css';\nimport Home from './Pannels/Home'\n\nimport connect from '@vkontakte/vkui-connect';\n\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Playarea from './Components/Playarea';\nimport Leaders from './Components/Leaders';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n  }\n\n  componentDidMount() {\n    connect.send(\"VKWebAppInit\", {}); \n\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n          this.setState({fetchedUser : e.detail.data}) ;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n  \n  //Переход на новую панель\n  go = (e) => {\n    this.setState({ activePanel: e.currentTarget.dataset.to })\n  };\n\n  //Диалоговое окно поделиться\n  share = (e) =>{\n    connect.send(\"VKWebAppShare\", {\"link\": \"https://vk.com/app7094427\"})\n  }\n  \n  render(){\n    return (\n    <View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} share={this.share} />\n        <Playarea id=\"play\" go={this.go} />\n        <Leaders id=\"leaders\" go={this.go} />\n    </View>\n    );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}